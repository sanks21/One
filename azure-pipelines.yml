# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
parameters:
- name: basebranch
- name: featurebranch
resources:
  repositories:
  
  - repository: TwoGitHubRepo 
    type: github
    endpoint: sks007
    name: sanks21/Two
    ref: Release_Two
  - repository: OneGitHubRepo 
    type: github
    endpoint: sks007
    name: sanks21/One
    ref: Release_one

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Import
  displayName: Import_files
  jobs:  
  - job: Import
    displayName: Imported_files
    pool:
      vmImage: ubuntu-latest
    
    steps:
    - checkout: TwoGitHubRepo
    
    
    - script: |
        a="$(dir $(Build.SourcesDirectory))"
        echo "$a" > file.txt

        mkdir changedzipfiles

        while read p; do
            echo "$p"
            cp "$p" changedzipfiles
        done <file.txt

         
    
    - script: zip -r changedzipfiles.zip changedzipfiles
    
    - task: CopyFiles@2
      inputs:
          Contents: "*zip"
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'changedfiles'
        publishLocation: 'Container'
         
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'

    - checkout: OneGitHubRepo
    
    
    - script: |
        b="$(git diff --name-only --diff-filter=AMCRT ${{parameters.basebranch}}...${{parameters.featurebranch}} ':!azure-pipelines.yml')"
        echo "$b" > file1.txt

        mkdir changedzipfiles1

        while read p; do
            echo "$p"
            cp "$p" changedzipfiles1
        done <file1.txt

         
    
    - script: zip -r changedzipfiles1.zip changedzipfiles1
    
    - task: CopyFiles@2
      inputs:
          Contents: "*zip"
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'changedfiles'
        publishLocation: 'Container'
         
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'  


